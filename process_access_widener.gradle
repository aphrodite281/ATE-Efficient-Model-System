def processAccessWidener(inputFile, outputFile) {
    // def outputFile = File.createTempFile("mtrsteamloco_filtered", ".accesswidener")
    outputFile.deleteOnExit()
    
    def mcVersion = project.rootProject.ext.minecraft_version_int as Integer
    
    def outputLines = []
    def skipping = false
    
    inputFile.eachLine { line ->
        def shouldIncludeLine = true
        if (line.startsWith("if")) {
            if (line.contains("==")) {
                def version = line.split("==")[1].trim() as Integer
                skipping = version != mcVersion
                shouldIncludeLine = false;
            } else if (line.contains(">=")) {
                def version = line.split(">=")[1].trim() as Integer
                skipping = mcVersion < version
                shouldIncludeLine = false;
            } else if (line.contains("<=")) {
                def version = line.split(">=")[1].trim() as Integer
                skipping = mcVersion > version
                shouldIncludeLine = false;
            } else if (line.contains("<")) {
                def version = line.split("<")[1].trim() as Integer
                skipping = mcVersion >= version
                shouldIncludeLine = false;
            } else if (line.contains(">")) {
                def version = line.split(">")[1].trim() as Integer
                skipping = mcVersion <= version
                shouldIncludeLine = false;
            } else if (line.contains("!=")) {
                def version = line.split("!=")[1].trim() as Integer
                skipping = mcVersion == version
                shouldIncludeLine = false;
            } 
        } else if (line.startsWith("else")) {
            skipping = !skipping
            shouldIncludeLine = false;
        } else if (line.startsWith("endif")) {
            skipping = false
            shouldIncludeLine = false;
        }

        if (shouldIncludeLine && !skipping) {
            outputLines.add(line)
        }
    }
    
    outputFile.withWriter { writer ->
        outputLines.each { line ->
            writer.writeLine(line)
        }
    }
    
    // println "Processed accessWidener file. Original lines: ${inputFile.readLines().size()}, Filtered lines: ${outputLines.size()}"
    return outputFile
}

ext {
    processAccessWidener = this.&processAccessWidener
}